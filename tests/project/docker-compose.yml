
version: "3" 
services:

    # Camada da aplicação
    # https://hub.docker.com/_/php
    php:
        container_name: app
        build:
            context: ./
            dockerfile: DockerfilePHP
        volumes:
            - ".:/var/www/html"
            - "./docker-php.ini:/usr/local/etc/php/conf.d/local.ini"
        ports:
            - "30001:9000" # mapeada a porta app para a porta 9000 
        depends_on:
            - mysql
        networks:
          - container-network

    # Camada do Web server
    # https://hub.docker.com/_/nginx/
    nginx:
        container_name: webserver
        build:
            context: ./
            dockerfile: DockerfileNGINX
        volumes:
            - "./:/var/www/html"
            - "./docker-nginx.conf:/etc/nginx/conf.d/default.conf"
        ports:
            - "30000:80" # mapeada a porta 30000 para a porta 80
        depends_on:
            - php
        networks:
            - container-network
    
    # Camada de persistencia
    # https://hub.docker.com/_/mysql
    mysql:
        container_name: database 
        build:
            context: ./
            dockerfile: DockerfileMYSQL
        volumes:
            - "db_data:/var/lib/mysql"
            - "./docker-mysql.cnf:/etc/mysql/my.cnf"
            # qualquer arquivo SQL dentro de /database será 
            # executado automaticamente na criação do container
            - "./database:/docker-entrypoint-initdb.d"
        ports:
            - "30002:3306" # mapeada a porta 30002 para a porta 3306
        environment:
            - MYSQL_HOST=database # o host é o mesmo nome do container
            - MYSQL_PORT=3306
            - MYSQL_ROOT_PASSWORD=secret
            - MYSQL_DATABASE=app_database
            - MYSQL_USER=dbuser
            - MYSQL_PASSWORD=secret
        networks:
            - container-network
    
# Docker Volumes
volumes:
  db_data:
    driver: local

# Docker Networks
networks:
  container-network:
    driver: bridge
