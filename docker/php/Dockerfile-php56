# Este script é executado quando a imagem é gerada

FROM php:5.6-fpm

#----------------------------------------------
# EXTENSÕES
# Marcadas com [ok] estão instalados por padrão
# os outros podem ser adicionados manualmente
#----------------------------------------------

# [  ] bcmath
# [  ] bz2
# [  ] calendar
# [ok] ctype 
# [ok] curl 
# [  ] dba
# [ok] date 
# [ok] dom 
# [  ] enchant
# [  ] exif
# [ok] ereg 
# [ok] fileinfo 
# [ok] filter 
# [ok] ftp 
# [  ] gd
# [  ] gettext
# [  ] gmp
# [ok] hash 
# [ok] iconv 
# [  ] imap
# [ok] json 
# [  ] ldap
# [ok] libxml 
# [ok] mbstring 
# [ok] mhash 
# [  ] mcrypt
# [  ] mssql
# [  ] mysql
# [  ] mysqli 
# [ok] mysqlnd
# [  ] oci8
# [  ] odbc
# [  ] opcache
# [ok] openssl 
# [ok] pcre 
# [  ] pcntl
# [ok] pdo
# [  ] pdo_dblib
# [  ] pdo_firebird
# [  ] pdo_mysql
# [  ] pdo_oci
# [  ] pdo_odbc
# [  ] pdo_pgsql
# [ok] pdo_sqlite
# [  ] pgsql
# [ok] phar 
# [ok] posix 
# [  ] pspell
# [ok] readline 
# [  ] recode
# [ok] reflection 
# [ok] session 
# [  ] shmop
# [ok] simplexml 
# [ok] spl 
# [ok] sqlite3 
# [ok] standard 
# [  ] sybase_ct
# [  ] sysvmsg
# [  ] sysvsem
# [  ] sysvshm
# [  ] tidy
# [ok] tokenizer 
# [  ] wddx
# [ok] xml 
# [ok] xmlreader 
# [  ] xmlrpc
# [ok] xmlwriter 
# [  ] xsl
# [  ] zip
# [ok] zlib 

#----------------------------------------------
# BIBLIOTECAS
# As bibliotecas sem a marcação [ok] são instaladas 
# a partir deste ponto. Algumas bibliotecas possuem 
# dependencias para poderem ser compiladas!
#----------------------------------------------

RUN apt-get update;

# BCMATH
RUN docker-php-ext-install -j$(nproc) bcmath;

# BZ2
RUN apt-get install -y libbz2-dev;
RUN docker-php-ext-install -j$(nproc) bz2;

# CALENDAR
RUN docker-php-ext-install -j$(nproc) calendar;

# DBA
RUN docker-php-ext-install -j$(nproc) dba;

# ENCHANT
RUN apt-get install -y libenchant-dev;
RUN docker-php-ext-install -j$(nproc) enchant;

# EXIF
RUN docker-php-ext-install -j$(nproc) exif;

# GD
RUN apt-get install -y libfreetype6-dev;
RUN apt-get install -y libjpeg62-turbo-dev;
RUN apt-get install -y libpng-dev;
RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/;
RUN docker-php-ext-install -j$(nproc) gd;

# GETTEXT
RUN docker-php-ext-install -j$(nproc) gettext;

# GMP
RUN apt-get install -y libgmp-dev;
RUN ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h;
RUN docker-php-ext-install -j$(nproc) gmp;

# IMAGICK
RUN apt-get install -y libmagickwand-dev --no-install-recommends;
RUN pecl install imagick;
RUN docker-php-ext-enable imagick;

# IMAP
RUN apt-get install -y libc-client-dev libkrb5-dev;
RUN docker-php-ext-configure imap --with-imap-ssl --with-kerberos;
RUN docker-php-ext-install imap;

# LDAP
RUN apt-get install -y libldap2-dev;
RUN docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/;
RUN docker-php-ext-install -j$(nproc) ldap;

# MCRYPT
RUN apt-get install -y libmcrypt-dev;
RUN docker-php-ext-install -j$(nproc) mcrypt;

# OPCACHE
RUN docker-php-ext-install -j$(nproc) opcache;

# PCNTL
RUN docker-php-ext-install -j$(nproc) pcntl;

# PDO DBLIB
RUN apt-get install -y freetds-bin freetds-dev freetds-common libsybdb5;
RUN ln -s /usr/lib/x86_64-linux-gnu/libsybdb.so /usr/lib/;
RUN docker-php-ext-install -j$(nproc) pdo_dblib;

# PDO FIREBIRD
RUN apt-get install -y firebird-dev;
RUN docker-php-ext-install -j$(nproc) pdo_firebird;

# PDO MSSQL
RUN docker-php-ext-install -j$(nproc) mssql;

# PDO MYSQL
RUN apt install -y mysql-client;
RUN docker-php-ext-install -j$(nproc) mysql;
RUN docker-php-ext-install -j$(nproc) mysqli; 
RUN docker-php-ext-install -j$(nproc) pdo_mysql;

# PDO OCI8
# Ainda não configurado para o PHP 56

# PDO ODBC
# Ainda não configurado para o PHP 56
RUN apt-get install -y unixodbc-dev unixodbc libpq-dev;
RUN set -ex; \
    docker-php-source extract; \
    { \
        echo '# https://github.com/docker-library/php/issues/103#issuecomment-353674490'; \
        echo 'AC_DEFUN([PHP_ALWAYS_SHARED],[])dnl'; \
        echo; \
        cat /usr/src/php/ext/odbc/config.m4; \
    } > temp.m4; \
    mv temp.m4 /usr/src/php/ext/odbc/config.m4; \
    docker-php-ext-configure odbc --with-unixODBC=shared,/usr; \
    docker-php-ext-install odbc;

# PDO PGSQL
RUN apt-get install -y libpq-dev;
RUN docker-php-ext-install -j$(nproc) pdo_pgsql;

# PSPELL
RUN apt-get install -y libpspell-dev aspell-en aspell-pt-br;
RUN docker-php-ext-install -j$(nproc) pspell;

# RECODE
RUN apt-get install -y librecode0 librecode-dev;
RUN docker-php-ext-install -j$(nproc) recode;

# SHMOP
RUN docker-php-ext-install -j$(nproc) shmop;

# SOAP
RUN apt-get install -y libxml2-dev;
RUN docker-php-ext-install -j$(nproc) soap;

# SYBASE CT
# RUN docker-php-ext-configure sybase_ct --with-sybase-ct=/usr;
# RUN docker-php-ext-install -j$(nproc) sybase_ct;

# SYSVMSG
# !! ainda não funciona corretamente!!
RUN docker-php-ext-install -j$(nproc) sysvmsg;

# SYSVSEM
# !! ainda não funciona corretamente!!
# RUN docker-php-ext-install -j$(nproc) sysvsem;

# SYSVSHM
# !! ainda não funciona corretamente!!
# RUN docker-php-ext-install -j$(nproc) sysvshm;

# TIDY
RUN apt install -y libtidy-dev;
RUN docker-php-ext-install -j$(nproc) tidy;

# WDDX
# !! ainda não funciona corretamente!!
# RUN docker-php-ext-install -j$(nproc) wddx;

# XMLRPC
RUN apt-get install -y libxml2-dev;
RUN docker-php-ext-install -j$(nproc) xmlrpc;

# XSL
RUN apt-get install -y libxslt-dev;
RUN docker-php-ext-install -j$(nproc) xsl;

# ZIP
RUN docker-php-ext-install -j$(nproc) zip;


#----------------------------------------------
# LIMPEZA
# Remove asquivos temporários gerados pelo
# processo de instalação
#----------------------------------------------

RUN rm -rf /var/lib/apt/lists/*;
RUN apt-get autoremove -y;

# ref https://gist.github.com/hoandang/88bfb1e30805df6d1539640fc1719d12